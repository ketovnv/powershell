Trace-ImportProcess  ([System.IO.Path]::GetFileNameWithoutExtension($MyInvocation.MyCommand.Name)) -start

# ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
# ‚ïë                    üöÄ QUICK START - BROWSER TRANSLATOR                      ‚ïë
# ‚ïë                        –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞                        ‚ïë
# ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
function Install-TranslatorDependencies {
    wrgb "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -FC "Cyan" -Style Bold -newline

    # Selenium PowerShell Module
    if (-not (Get-Module -ListAvailable -Name Selenium)) {
        wrgb "  ‚Ä¢ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Selenium..." -FC "Yellow"
        Install-Module -Name Selenium -Force -Scope CurrentUser
        wrgb " ‚úÖ" -FC "Green" -newline
    }

    # WebDriver –¥–ª—è Edge
    if (-not (Test-Path "$env:USERPROFILE\.webdrivers\msedgedriver.exe")) {
        wrgb "  ‚Ä¢ –ó–∞–≥—Ä—É–∂–∞–µ–º Edge WebDriver..." -FC "Yellow"

        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –¥—Ä–∞–π–≤–µ—Ä–æ–≤
        New-Item -Path "$env:USERPROFILE\.webdrivers" -ItemType Directory -Force | Out-Null

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–µ—Ä—Å–∏—é Edge
        $edgeVersion = (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\msedge.exe').'(Default)' |
        ForEach-Object { (Get-Item $_).VersionInfo.ProductVersion }

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –¥—Ä–∞–π–≤–µ—Ä
        $driverUrl = "https://msedgedriver.azureedge.net/$edgeVersion/edgedriver_win64.zip"
        $zipPath = "$env:TEMP\edgedriver.zip"

        Invoke-WebRequest -Uri $driverUrl -OutFile $zipPath
        Expand-Archive -Path $zipPath -DestinationPath "$env:USERPROFILE\.webdrivers" -Force
        Remove-Item $zipPath

        wrgb " ‚úÖ" -FC "Green" -newline
    }

    # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH
    if ($env:PATH -notlike "*$env:USERPROFILE\.webdrivers*") {
        $env:PATH += ";$env:USERPROFILE\.webdrivers"
    }

    Write-Status -Success "–í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
}

# –ü—Ä–æ—Å—Ç–µ–π—à–∏–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
function Quick-Translate {
    <#
    .SYNOPSIS
        –°–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç
        
    .EXAMPLE
        Quick-Translate "Hello, World!"
        
    .EXAMPLE
        "Welcome to PowerShell" | Quick-Translate -To es
    #>
    param(
        [Parameter(Mandatory, Position = 0, ValueFromPipeline)]
        [string]$Text,

        [string]$To = 'ru'
    )

    wrgb "üåê –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ $To..." -FC "Cyan" -newline

    # –ü—Ä–æ—Å—Ç–æ–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ Google Translate URL
    $encoded = [System.Web.HttpUtility]::UrlEncode($Text)
    $url = "https://translate.google.com/?sl=auto&tl=$To&text=$encoded&op=translate"

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    Start-Process $url

    wrgb "‚úÖ –û—Ç–∫—Ä—ã—Ç–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ!" -FC "Green" -newline
}

# –°—É–ø–µ—Ä-–ø—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è —Å Selenium
function Simple-BrowserTranslate {
    param(
        [Parameter(ValueFromPipeline)]
        [string]$Text,

        [string]$To = 'ru'
    )

    begin {
        wrgb "ü§ñ –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä..." -FC "Cyan"

        Import-Module Selenium

        # –ó–∞–ø—É—Å–∫–∞–µ–º Edge –≤ —Ñ–æ–Ω–µ
        $driver = Start-SeEdge -Headless
        wrgb " ‚úÖ" -FC "Green" -newline
    }

    process {
        try {
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ Google Translate
            $driver.Navigate().GoToUrl("https://translate.google.com")
            Start-Sleep -Seconds 1

            # –í–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç
            $inputBox = $driver.FindElementByClassName("er8xn")
            $inputBox.Clear()
            $inputBox.SendKeys($Text)

            # –ñ–¥–µ–º –ø–µ—Ä–µ–≤–æ–¥
            Start-Sleep -Seconds 2

            # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            $result = $driver.FindElementByClassName("J0lOec").Text

            wrgb "üìù –û—Ä–∏–≥–∏–Ω–∞–ª: " -FC "Gray"
            wrgb $Text -FC "White" -newline
            wrgb "üîÑ –ü–µ—Ä–µ–≤–æ–¥: " -FC "Gray"
            wrgb $result -FC "Green" -Style Bold -newline

            return $result

        }
        catch {
            Write-Status -Error "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: $_"
        }
    }

    end {
        $driver.Quit()
        wrgb "üëã –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç" -FC "DarkGray" -newline
    }
}

# –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∞–π–ª–æ–≤ - –ø—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è
function Translate-FileSimple {
    param(
        [string]$Path,
        [string]$To = 'ru'
    )

    if (-not (Test-Path $Path)) {
        Write-Status -Error "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $Path"
        return
    }

    $content = Get-Content $Path -Raw
    $lines = $content -split "`n"

    wrgb "üìÑ –ü–µ—Ä–µ–≤–æ–¥–∏–º —Ñ–∞–π–ª: " -FC "Cyan"
    wrgb (Split-Path $Path -Leaf) -FC "Yellow" -Style Bold -newline
    wrgb "üìè –°—Ç—Ä–æ–∫: " -FC "Gray"
    wrgb $lines.Count -FC "White" -newline

    # –°–æ–∑–¥–∞–µ–º –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª
    $outPath = [System.IO.Path]::GetFileNameWithoutExtension($Path) + "_$To.txt"

    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ—Å—Ç—Ä–æ—á–Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã
    $translated = @()

    Import-Module Selenium
    $driver = Start-SeEdge -Headless

    try {
        $driver.Navigate().GoToUrl("https://translate.google.com")
        Start-Sleep -Seconds 1

        $i = 0
        foreach ($line in $lines) {
            $i++
            if ($line.Trim()) {
                Write-Progress -Activity "–ü–µ—Ä–µ–≤–æ–¥" -Status "–°—Ç—Ä–æ–∫–∞ $i –∏–∑ $($lines.Count)" -PercentComplete (($i / $lines.Count) * 100)

                # –û—á–∏—â–∞–µ–º –∏ –≤–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç
                $inputBox = $driver.FindElementByClassName("er8xn")
                $inputBox.Clear()
                $inputBox.SendKeys($line)

                Start-Sleep -Milliseconds 1500

                # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥
                $result = $driver.FindElementByClassName("J0lOec").Text
                $translated += $result
            }
            else {
                $translated += ""
            }
        }

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        $translated | Out-File -FilePath $outPath -Encoding UTF8

        Write-Progress -Activity "–ü–µ—Ä–µ–≤–æ–¥" -Completed
        Write-Status -Success "–ü–µ—Ä–µ–≤–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: $outPath"

    }
    finally {
        $driver.Quit()
    }
}

# –ú–∏–Ω–∏-–≤–µ—Ä—Å–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞
function Mini-Translator {
    Write-GradientHeader -Title "MINI TRANSLATOR" -StartColor "#4285F4" -EndColor "#34A853"

    wrgb "üí° –ö–æ–º–∞–Ω–¥—ã: [Enter] - –ø–µ—Ä–µ–≤–µ—Å—Ç–∏, 'exit' - –≤—ã—Ö–æ–¥" -FC "DarkGray" -newline

    Import-Module Selenium
    $driver = Start-SeEdge -Headless

    try {
        $driver.Navigate().GoToUrl("https://translate.google.com")
        Start-Sleep -Seconds 1

        while ($true) {
            wrgb "`nüìù –¢–µ–∫—Å—Ç: " -FC "Cyan"
            $text = Read-Host

            if ($text -eq 'exit') { break }
            if (-not $text) { continue }

            # –ü–µ—Ä–µ–≤–æ–¥–∏–º
            $inputBox = $driver.FindElementByClassName("er8xn")
            $inputBox.Clear()
            $inputBox.SendKeys($text)

            Start-Sleep -Seconds 2

            $result = $driver.FindElementByClassName("J0lOec").Text

            wrgb "üîÑ " -FC "Green"
            wrgb $result -FC "White" -Style Bold -newline
        }
    }
    finally {
        $driver.Quit()
    }
}

# –°—É–ø–µ—Ä-–±—ã—Å—Ç—Ä—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ API (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π)
function Lightning-Translate {
    param(
        [Parameter(ValueFromPipeline)]
        [string]$Text,

        [string]$To = 'ru'
    )

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π API Google Translate (–º–æ–∂–µ—Ç –ø–µ—Ä–µ—Å—Ç–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å)
    $url = "https://translate.googleapis.com/translate_a/single?client=gtx&sl=auto&tl=$To&dt=t&q=$([uri]::EscapeDataString($Text))"

    try {
        $response = Invoke-RestMethod -Uri $url -Method Get
        $translation = $response[0][0][0]

        wrgb "‚ö° " -FC "Yellow"
        wrgb $translation -FC "Green" -Style Bold -newline

        return $translation
    }
    catch {
        Write-Status -Error "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä–Ω—ã–π –º–µ—Ç–æ–¥"
    }
}

# –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
function Show-TranslatorExamples {
    Clear-Host

    Write-GradientHeader -Title "TRANSLATOR EXAMPLES" -StartColor "#4285F4" -EndColor "#34A853"

    wrgb "üåê –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:" -FC "Gold" -Style Bold -newline

    # –ü—Ä–∏–º–µ—Ä 1
    wrgb "`n1Ô∏è‚É£ –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞:" -FC "Cyan" -newline
    wrgb "   " -FC "White"
    wrgb '"Hello, World!" | Lightning-Translate' -FC "Material_Comment" -newline
    "Hello, World!" | Lightning-Translate

    # –ü—Ä–∏–º–µ—Ä 2
    wrgb "`n2Ô∏è‚É£ –ü–µ—Ä–µ–≤–æ–¥ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:" -FC "Cyan" -newline
    wrgb "   " -FC "White"
    wrgb 'Quick-Translate "Welcome to PowerShell"' -FC "Material_Comment" -newline

    # –ü—Ä–∏–º–µ—Ä 3
    wrgb "`n3Ô∏è‚É£ –ü–µ—Ä–µ–≤–æ–¥ –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞:" -FC "Cyan" -newline
    wrgb "   " -FC "White"
    wrgb 'Get-Clipboard | Lightning-Translate | Set-Clipboard' -FC "Material_Comment" -newline

    # –ü—Ä–∏–º–µ—Ä 4
    wrgb "`n4Ô∏è‚É£ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –º–∏–Ω–∏-–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫:" -FC "Cyan" -newline
    wrgb "   " -FC "White"
    wrgb 'Mini-Translator' -FC "Material_Comment" -newline

    # –ü—Ä–∏–º–µ—Ä 5
    wrgb "`n5Ô∏è‚É£ –ü–µ—Ä–µ–≤–æ–¥ —Ñ–∞–π–ª–∞:" -FC "Cyan" -newline
    wrgb "   " -FC "White"
    wrgb 'Translate-FileSimple -Path "document.txt"' -FC "Material_Comment" -newline

    wrgb "`nüí° –ü–æ–ª–µ–∑–Ω—ã–µ –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω–∏–∫–∏:" -FC "Yellow" -Style Bold -newline

    wrgb "`n# –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –∏ –æ–∑–≤—É—á–∏—Ç—å:" -FC "Green" -newline
    wrgb '"Good morning" | Lightning-Translate | ForEach-Object { (New-Object -ComObject SAPI.SpVoice).Speak($_) }' -FC "White" -newline

    wrgb "`n# –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ help –∫–æ–º–∞–Ω–¥—ã:" -FC "Green" -newline
    wrgb 'Get-Help Get-Process | Out-String | Lightning-Translate' -FC "White" -newline

    wrgb "`n# –°–æ–∑–¥–∞—Ç—å —Å–ª–æ–≤–∞—Ä—å:" -FC "Green" -newline
    wrgb '@("Hello", "Goodbye", "Thank you") | ForEach-Object { "$_ = $(Lightning-Translate $_)" }' -FC "White" -newline
}

# –ê–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
$script:TranslatorInitialized = $false

function Initialize-TranslatorIfNeeded {
    if (-not $script:TranslatorInitialized) {
        if (-not (Get-Module -ListAvailable -Name Selenium)) {
            wrgb "‚ö° –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã..." -FC "Yellow" -newline
            Install-TranslatorDependencies
        }
        $script:TranslatorInitialized = $true
    }
}

# –ö–æ—Ä–æ—Ç–∫–∏–µ –∞–ª–∏–∞—Å—ã
Set-Alias -Name tr -Value Lightning-Translate -Force
Set-Alias -Name translate -Value Translate-Text -Force
Set-Alias -Name mt -Value Mini-Translator -Force

wrgb "`nüåê " -FC "Gold"
Write-GradientText "Quick Translator" -StartColor "#4285F4" -EndColor "#34A853" -NoNewline
wrgb " –≥–æ—Ç–æ–≤!" -FC "Gold" -newline

wrgb "`n‚ö° –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -FC "Cyan" -Style Bold -newline
wrgb "  ‚Ä¢ " -FC "DarkGray"
wrgb "tr" -FC "Yellow"
wrgb ' "Hello"' -FC "White"
wrgb " - –º–æ–ª–Ω–∏–µ–Ω–æ—Å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥" -FC "Gray" -newline

wrgb "  ‚Ä¢ " -FC "DarkGray"
wrgb "mt" -FC "Yellow"
wrgb " - –º–∏–Ω–∏-–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫" -FC "Gray" -newline

wrgb "  ‚Ä¢ " -FC "DarkGray"
wrgb "Show-TranslatorExamples" -FC "Yellow"
wrgb " - –ø—Ä–∏–º–µ—Ä—ã" -FC "Gray" -newline

Trace-ImportProcess  ([System.IO.Path]::GetFileNameWithoutExtension($MyInvocation.MyCommand.Name))