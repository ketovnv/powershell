# –®–∞–±–ª–æ–Ω—ã –ø–µ—Ä–µ–≤–æ–¥–∞ –æ—à–∏–±–æ–∫
$ErrorTranslations = @{
# –û–±—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    "Access is denied" = "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω"
    "NotSpecified" = "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
    "The term .* is not recognized" = "–ö–æ–º–∞–Ω–¥–∞ '{}' –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞"
    "Cannot find path" = "–ù–µ —É–¥–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ –ø—É—Ç—å üîç"
    "Cannot find drive" = "–ù–µ —É–¥–∞–µ—Ç—Å—è –Ω–∞–π—Ç–∏ –¥–∏—Å–∫ üíø"
    "The file .* cannot be found" = "–§–∞–π–ª '{}' –Ω–µ –Ω–∞–π–¥–µ–Ω"
    "Cannot convert value" = "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ"
    "Attempted to divide by zero" = "–ü–æ–ø—ã—Ç–∫–∞ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å üò≤"
    "Object reference not set" = "–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—ä–µ–∫—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ üìé"
    "Index was outside the bounds" = "–ò–Ω–¥–µ–∫—Å –≤—ã—à–µ–ª –∑–∞ –ø—Ä–µ–¥–µ–ª—ã –º–∞—Å—Å–∏–≤–∞ üìé"
    "The property .* cannot be found" = "–°–≤–æ–π—Å—Ç–≤–æ '{}' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üìé"
    "Cannot validate argument" = "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç"
    "Parameter .* cannot be found" = "–ü–∞—Ä–∞–º–µ—Ç—Ä '{}' –Ω–µ –Ω–∞–π–¥–µ–Ω üîç"
    "Network path was not found" = "–°–µ—Ç–µ–≤–æ–π –ø—É—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω üì°"
    "Access to the path .* is denied" = "–î–æ—Å—Ç—É–ø –∫ –ø—É—Ç–∏ '{}' –∑–∞–ø—Ä–µ—â—ë–Ω üîí"

    # –ö–æ–º–º–∞–Ω–¥—ã
    "Import-PythonModule" = "Import-PythonModule (–ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –ü–∏—Ç–æ–Ω–∞) ‚öóÔ∏è"

    # –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏
    "Python module not found" = "–ú–æ–¥—É–ª—å –ü–∏—Ç–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω üôÅ"
    "CommandNotFoundException" = "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ üôÅ"
    "ParameterBindingException" = "–û—à–∏–±–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ üß∂"
    "ArgumentException" = "–ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç üôÅ"
    "UnauthorizedAccessException" = "–ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ üîí"
    "FileNotFoundException" = "–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω Ô∏èÔ∏èüó∫"
    "DirectoryNotFoundException" = "–ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ üôÅüó∫"
    "PathTooLongException" = "–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –ø—É—Ç—å üôÅ"
    "InvalidOperationException" = "–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è üôÅ"
    "NotSupportedException" = "–û–ø–µ—Ä–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è üôÅ"
    "TimeoutException" = "–ò—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è üï∞Ô∏è"
    "NetworkException" = "–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ üåèüó∫"
}

# –®–∞–±–ª–æ–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
$ErrorTemplates = @{
    "Import-PythonModule" = @{
        Icon = "üêç"
        Pattern = "Python module not found"
        Template = "{Icon} '{message}': `n  {FullPath}"
        Suggestion = "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—É—Ç—å –∫  –º–æ–¥—É–ª—é üí°"
        Color = "Red"
    }
    "CommandNotFoundException" = @{
        Icon = "‚ùå"
        Pattern = "CommandNotFoundError"
        Template = "{Icon} –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: '{Command}'"
        Suggestion = "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –º–æ–¥—É–ª—å"
        Color = "Red"
    }

    "ParameterBindingException" = @{
        Icon = "‚öôÔ∏è"
        Pattern = "ParameterBinding"
        Template = "{Icon} –û—à–∏–±–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: {Message}"
        Suggestion = "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —É–∫–∞–∑–∞–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"
        Color = "Yellow"
    }

    "UnauthorizedAccessException" = @{
        Icon = "üîí"
        Pattern = "Access.*denied"
        Template = "{Icon} –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞: {Path}"
        Suggestion = "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞"
        Color = "Magenta"
    }

    "FileNotFoundException" = @{
        Icon = "üìÑ"
        Pattern = "cannot find.*file"
        Template = "{Icon} –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: '{FileName}'"
        Suggestion = "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏ –µ–≥–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ"
        Color = "Blue"
    }

    "DirectoryNotFoundException" = @{
        Icon = "üìÅ"
        Pattern = "cannot find.*path"
        Template = "{Icon} –ü–∞–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: '{Path}'"
        Suggestion = "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø—É—Ç–∏ –∫ –ø–∞–ø–∫–µ"
        Color = "Blue"
    }

    "InvalidOperationException" = @{
        Icon = "‚ö†Ô∏è"
        Pattern = "Invalid.*operation"
        Template = "{Icon} –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è: {Message}"
        Suggestion = "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏"
        Color = "DarkYellow"
    }

    "ArgumentException" = @{
        Icon = "üìù"
        Pattern = "Argument.*exception"
        Template = "{Icon} –ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç: {ArgumentName}"
        Suggestion = "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π"
        Color = "Cyan"
    }

    "NetworkException" = @{
        Icon = "üåê"
        Pattern = "network.*error|connection.*failed"
        Template = "{Icon} –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {Message}"
        Suggestion = "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç–µ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"
        Color = "DarkRed"
    }

    "TimeoutException" = @{
        Icon = "‚è∞"
        Pattern = "timeout|timed.*out"
        Template = "{Icon} –ò—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è: {Message}"
        Suggestion = "üí° –£–≤–µ–ª–∏—á—å—Ç–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"
        Color = "DarkMagenta"
    }

    "ParseException" = @{
        Icon = "üìã"
        Pattern = "parse.*error|syntax.*error"
        Template = "{Icon} –û—à–∏–±–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞: {Message}"
        Suggestion = "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ–º–∞–Ω–¥—ã –∏–ª–∏ —Å–∫—Ä–∏–ø—Ç–∞"
        Color = "Red"
    }

    "Default" = @{
        Icon = "‚ùó"
        Template = "{Icon} {Message}"
        Suggestion = ""
        Color = "White"
    }
}
#endregion

function Get-ErrorMessageTranslate
{
    param(
        [string]$Message,
        [string]$ExceptionType
    )

    if (-not $ErrorViewConfig.AutoTranslate -or $ErrorViewConfig.Language -eq "en")
    {
        return $Message
    }

    $translatedMessage = $Message

    # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º —Ç–æ—á–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ –ø–æ —Ç–∏–ø—É –∏—Å–∫–ª—é—á–µ–Ω–∏—è
    if ( $ErrorTranslations.ContainsKey($ExceptionType))
    {
        return $ErrorTranslations[$ExceptionType]
    }

    # –ó–∞—Ç–µ–º –∏—â–µ–º –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º
    foreach ($pattern in $ErrorTranslations.Keys)
    {
        if ($Message -match $pattern)
        {
            $translatedMessage = $ErrorTranslations[$pattern]
            # –ó–∞–º–µ–Ω—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –µ—Å–ª–∏ –µ—Å—Ç—å —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ regex
            if ($matches.Count -gt 1)
            {
                for ($i = 1; $i -lt $matches.Count; $i++) {
                    $translatedMessage = $translatedMessage -replace "\{\}", $matches[$i]
                }
            }
            break
        }
    }

    return $translatedMessage
}

function Get-ErrorTemplate
{
    param(
        [System.Management.Automation.ErrorRecord]$ErrorRecord
    )

    $exceptionType = $ErrorRecord.Exception.GetType().Name
    $message = $ErrorRecord.Exception.Message
    # –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π —à–∞–±–ª–æ–Ω
    $template = $ErrorTemplates["Default"]

    foreach ($templateKey in $ErrorTemplates.Keys)
    {
        if ($templateKey -eq "Default")
        {
            continue
        }

        $templateInfo = $ErrorTemplates[$templateKey]

        #        wrgb $exceptionType -FC Blue -newline
        #        wrgb  $templateKey -FC Green -newline
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ —Ç–∏–ø—É –∏—Å–∫–ª—é—á–µ–Ω–∏—è
        if ($exceptionType -match $templateKey)
        {
            $template = $templateInfo
            break
        }
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ –ø–∞—Ç—Ç–µ—Ä–Ω—É –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        if ($templateInfo.Pattern -and $message -match $templateInfo.Pattern)
        {
            $template = $templateInfo
            break
        }
    }

    return $template
}

#region –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
function ConvertTo-SmartErrorView
{
    [CmdletBinding()]
    param(
        [System.Management.Automation.ErrorRecord]$InputObject
    )
    try
    {
        # –ï—Å–ª–∏  ObjectNotFound —Å—á–∏—Ç–∞–µ–º –ø—Ä–æ—Å—Ç–æ –æ–ø–µ—á–∞—Ç–∫–æ–π
        if ($InputObject.CategoryInfo.Category -eq "ObjectNotFound")
        {
            $output = ""
            if ($InputObject.Exception.Message -match "The term ['`"](.+?)['`"] is not recognized")
            {
                $commandName = $matches[1]
                $output += wrgb "üòà "$commandName -FC Material_Orange -newline
            }
            $output += wrgb  "üëª –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–±—Ä–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞, "  -FC "Material_Yellow"
            $output += wrgb  "–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ üòä"  -FC "#1177CC" -newline
            $output
            gh $commandName | d
            RETURN
        }

        # –ü–æ–ª—É—á–∞–µ–º —à–∞–±–ª–æ–Ω –¥–ª—è –æ—à–∏–±–∫–∏
        $template = Get-ErrorTemplate -ErrorRecord $InputObject
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏
        $details = Get-ErrorDetails -ErrorRecord $InputObject

        # –ü–µ—Ä–µ–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        $translatedMessage = Get-ErrorMessageTranslate -Message $details.Message -ExceptionType $InputObject.Exception.GetType().Name
        $details.Message = $translatedMessage
        $translatedCommand = Get-ErrorMessageTranslate -Message $details.Command -ExceptionType $InputObject.Exception.GetType().Name
        $details.Command = $translatedCommand

        $translatedCategory = Get-ErrorMessageTranslate -Message $details.Category -ExceptionType $InputObject.Exception.GetType().Name
        $details.Category = $translatedCategory


        $detailsKeyColor = "OneDark_Green"
        $detailsValueColor = "Nord_FrostBlue"

#                        foreach ($Key in  $details.keys)
#                        {
#                            wrgb "${Key} : "  -FC $detailsKeyColor
#                            wrgb  $details[$Key] -FC $detailsValueColor -newline
#                        }
#                       debug $details
    
        $formattedMessage = $template.template
        foreach ($key in $details.Keys)
        {
            $formattedMessage = $formattedMessage -replace "\{$key\}", $details[$key]
        }

        $formattedMessage = $formattedMessage -replace "\{Icon\}", $template.Icon
        $formattedMessage += wrgb  "`n  üî¥ –û–®–ò–ë–ö–ê: üî¥`n  "  -FC Material_Orange
        $formattedMessage += wrgbn $formattedMessage  -FC $template.Color
        $formattedMessage += wrgbn  "  üî¥ üî¥ üî¥ üî¥ üî¥ üî¥ üî¥ üî¥ üî¥üî¥ üî¥ üî¥ "

        # –ö–∞—Ç–µ–≥–æ—Ä–∏—è

        $formattedMessage += wrgb  "  üìã –ö–∞—Ç–µ–≥–æ—Ä–∏—è:" -FC Dracula_Purple
        $formattedMessage += wrgbn  $details.Category -FC $detailsValueColor

        # –ö–æ–º–∞–Ω–¥–∞, –≤—ã–∑–≤–∞–≤—à–∞—è –æ—à–∏–±–∫—É
        if ($details.Command)
        {
            $formattedMessage += wrgb  "  üéôÔ∏è  –ö–æ–º–∞–Ω–¥–∞:"  -FC Nord_AuroraOrange
            $formattedMessage += wrgbn $details.Command -FC $detailsValueColor

        }

        if ($details.Directory)
        {
            $formattedMessage += wrgb  "  üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:"  -FC  $detailsKeyColor 
            $formattedMessage += wrgbn $details.Directory -FC $detailsValueColor
        }

        if ($details.ScriptName)
        {
            $scriptName = Split-Path $details.ScriptName -Leaf
            $formattedMessage += wrgb  "  üìë –§–∞–π–ª:"  -FC  $detailsKeyColor 
            $formattedMessage += wrgbn $scriptName -FC $detailsValueColor
        }

        if ($details.Line)
        {
            $formattedMessage += wrgb  "  üìùÔ∏è –°—Ç—Ä–æ–∫–∞:"  -FC  $detailsKeyColor 
            $formattedMessage += wrgb $details.Line -FC White  -newline
        }

        #    –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –æ—à–∏–±–∫–∏

        if ($details.OffsetInLine -and $details.ScriptLineNumber)
        {
            $formattedMessage += wrgb "  üìç –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: "  -FC  $detailsKeyColor
            $formattedMessage += wrgb  "–õ–∏–Ω–∏—è " -FC  $detailsValueColor
            $formattedMessage += wrgb    $InputObject.InvocationInfo.ScriptLineNumber  -FC White
            $formattedMessage += wrgb     "  –ö–æ–ª–æ–Ω–∫–∞ "  -FC  $detailsValueColor
            $formattedMessage += wrgbn  $InputObject.InvocationInfo.OffsetInLine   -FC White
        }

        if ($template.Suggestion)
        {
            $formattedMessage += wrgb  "  üßô‚Äç‚ôÇÔ∏è –°–æ–≤–µ—Ç:"  -FC  $detailsKeyColor 
            $formattedMessage += wrgb $template.Suggestion -FC $detailsValueColor  -newline
        }
        $criticalErrors = @("UnauthorizedAccessException", "OutOfMemoryException", "StackOverflowException")
        if ($ErrorViewConfig.NotifyOnCritical -and $criticalErrors -contains $InputObject.Exception.GetType().Name)
        {
            $formattedMessage += "`nüö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê! –¢—Ä–µ–±—É–µ—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è!"
        }



        wrgb "`n   "
        $path= $details.FullPath ?? $details.ScriptName
         return $path ? "üî¥ ${path} üî¥" : "  üî¥ üî¥ üî¥ üî¥ üî¥ üî¥ üî¥ üî¥ üî¥ üî¥ `n`n"
        #      –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å –æ—à–∏–±–∫–∏

        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é

        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏—è—Ö
#        if ($ErrorViewConfig.ShowInnerExceptions -and $InputObject.Exception.InnerException)
#        {
#            $innerEx = $InputObject.Exception.InnerException
#            $innerMessage = Translate-ErrorMessage -Message $innerEx.Message -ExceptionType $innerEx.GetType().Name
#            $formattedMessage += "`nüîç –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞: $innerMessage"
#        }
#
#        # –î–æ–±–∞–≤–ª—è–µ–º stack trace –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
#        if ($ErrorViewConfig.ShowStackTrace -and $InputObject.Exception.StackTrace)
#        {
#            $formattedMessage += "`nüìä Stack Trace:`n$( $InputObject.Exception.StackTrace )"
#        }

        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
#        Log-Error -ErrorRecord $InputObject -FormattedMessage $formattedMessage


        #        Console-Warn formattedMessage

        #            Get-ErrorTranslate($InputObject)
        #
        #            # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—à–∏–±–∫–∏

        #

        #

        #
        #            # ID –æ—à–∏–±–∫–∏
        #            $output += wrgb "üÜî  ID –û—à–∏–±–∫–∏: " -FC "#FF5555"
        #            $output += wrgb  $InputObject.FullyQualifiedErrorId -FC Material_Purple -newline
        #





    }
    catch
    {
        # –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–∫–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        return "‚ùå $( $InputObject.Exception.Message )"
    }
}

# –°–æ–∑–¥–∞–µ–º —Ç–∞–∫–∂–µ —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é