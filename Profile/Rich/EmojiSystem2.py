#!/usr/bin/env python3
"""
setup_windows_fonts.py - –ü–æ–º–æ—â–Ω–∏–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —à—Ä–∏—Ñ—Ç–æ–≤ –¥–ª—è –ª—É—á—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —ç–º–æ–¥–∑–∏ –≤ Windows
"""

import platform
import subprocess
import sys
import os
from pathlib import Path
from rich.console import Console
from rich.panel import Panel
from rich.table import Table
from rich.prompt import Confirm

console = Console()

def check_windows_terminal():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Windows Terminal"""
    try:
        result = subprocess.run(['wt', '--version'], capture_output=True, text=True, timeout=5)
        if result.returncode == 0:
            return True, result.stdout.strip()
    except (subprocess.TimeoutExpired, FileNotFoundError):
        pass
    return False, None

def check_font_installed(font_name):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —à—Ä–∏—Ñ—Ç–∞ –≤ Windows"""
    if platform.system() != "Windows":
        return False

    try:
        import winreg
        with winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE,
                           r"SOFTWARE\Microsoft\Windows NT\CurrentVersion\Fonts") as key:
            i = 0
            while True:
                try:
                    name, value, _ = winreg.EnumValue(key, i)
                    if font_name.lower() in name.lower():
                        return True
                    i += 1
                except OSError:
                    break
    except ImportError:
        pass

    return False

def get_recommended_fonts():
    """–°–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö —à—Ä–∏—Ñ—Ç–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —ç–º–æ–¥–∑–∏"""
    return [
        {
            'name': 'Cascadia Code',
            'description': '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —à—Ä–∏—Ñ—Ç Microsoft —Å –æ—Ç–ª–∏—á–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —ç–º–æ–¥–∑–∏',
            'install_cmd': 'winget install Microsoft.CascadiaCode',
            'download_url': 'https://github.com/microsoft/cascadia-code/releases',
            'check_names': ['Cascadia Code', 'CascadiaCode']
        },
        {
            'name': 'JetBrains Mono',
            'description': '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π —à—Ä–∏—Ñ—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤',
            'install_cmd': 'winget install JetBrains.JetBrainsMono',
            'download_url': 'https://www.jetbrains.com/lp/mono/',
            'check_names': ['JetBrains Mono']
        },
        {
            'name': 'Fira Code',
            'description': '–®—Ä–∏—Ñ—Ç —Å –ª–∏–≥–∞—Ç—É—Ä–∞–º–∏ –∏ —Ö–æ—Ä–æ—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Unicode',
            'install_cmd': 'winget install "Fira Code"',
            'download_url': 'https://github.com/tonsky/FiraCode',
            'check_names': ['Fira Code']
        },
        {
            'name': 'Noto Color Emoji',
            'description': '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —à—Ä–∏—Ñ—Ç Google –¥–ª—è —ç–º–æ–¥–∑–∏',
            'install_cmd': '–°–∫–∞—á–∞—Ç—å –≤—Ä—É—á–Ω—É—é —Å GitHub',
            'download_url': 'https://github.com/googlefonts/noto-emoji',
            'check_names': ['Noto Color Emoji']
        }
    ]

def show_font_status():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —à—Ä–∏—Ñ—Ç–æ–≤"""
    console.print(Panel.fit(
        "[bold cyan]üî§ –°—Ç–∞—Ç—É—Å —à—Ä–∏—Ñ—Ç–æ–≤ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —ç–º–æ–¥–∑–∏[/bold cyan]",
        border_style="cyan"
    ))

    fonts = get_recommended_fonts()

    table = Table(show_header=True, header_style="bold magenta")
    table.add_column("–®—Ä–∏—Ñ—Ç", width=20)
    table.add_column("–°—Ç–∞—Ç—É—Å", width=15)
    table.add_column("–û–ø–∏—Å–∞–Ω–∏–µ", width=40)
    table.add_column("–£—Å—Ç–∞–Ω–æ–≤–∫–∞", width=30)

    for font in fonts:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∏–º–µ–Ω–∞ —à—Ä–∏—Ñ—Ç–∞
        installed = any(check_font_installed(name) for name in font['check_names'])

        status = "[green]‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω[/green]" if installed else "[red]‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω[/red]"

        table.add_row(
            font['name'],
            status,
            font['description'],
            font['install_cmd']
        )

    console.print(table)

def install_cascadia_code():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Cascadia Code —á–µ—Ä–µ–∑ winget"""
    if platform.system() != "Windows":
        console.print("[red]–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ Windows[/red]")
        return False

    console.print("[yellow]–ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Cascadia Code...[/yellow]")

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ winget
        subprocess.run(['winget', '--version'], check=True, capture_output=True)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à—Ä–∏—Ñ—Ç
        result = subprocess.run([
            'winget', 'install', 'Microsoft.CascadiaCode', '--accept-package-agreements'
        ], capture_output=True, text=True)

        if result.returncode == 0:
            console.print("[green]‚úÖ Cascadia Code —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω![/green]")
            console.print("[yellow]–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π[/yellow]")
            return True
        else:
            console.print(f"[red]–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {result.stderr}[/red]")
            return False

    except subprocess.CalledProcessError:
        console.print("[red]winget –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ App Installer –∏–∑ Microsoft Store[/red]")
        return False
    except FileNotFoundError:
        console.print("[red]winget –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ[/red]")
        return False

def show_windows_terminal_setup():
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Windows Terminal"""
    wt_installed, version = check_windows_terminal()

    if wt_installed:
        console.print(f"[green]‚úÖ Windows Terminal —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {version}[/green]")
    else:
        console.print("[red]‚ùå Windows Terminal –Ω–µ –Ω–∞–π–¥–µ–Ω[/red]")

    setup_instructions = """[bold cyan]üõ†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Windows Terminal –¥–ª—è —ç–º–æ–¥–∑–∏:[/bold cyan]

[yellow]1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Windows Terminal:[/yellow]
```bash
winget install Microsoft.WindowsTerminal
# –∏–ª–∏ –∏–∑ Microsoft Store
```

[yellow]2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–∞ –≤ Windows Terminal:[/yellow]
‚Ä¢ Ctrl+, (–æ—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)
‚Ä¢ –ü—Ä–æ—Ñ–∏–ª–∏ ‚Üí –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Üí –í–Ω–µ—à–Ω–∏–π –≤–∏–¥
‚Ä¢ –°–µ–º–µ–π—Å—Ç–≤–æ —à—Ä–∏—Ñ—Ç–æ–≤: "Cascadia Code" –∏–ª–∏ "JetBrains Mono"
‚Ä¢ –†–∞–∑–º–µ—Ä: 12-14

[yellow]3. JSON –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (profiles.json):[/yellow]
```json
{
    "profiles": {
        "defaults": {
            "font": {
                "face": "Cascadia Code",
                "size": 12
            }
        }
    }
}
```

[yellow]4. –î–ª—è VSCode Terminal:[/yellow]
‚Ä¢ File ‚Üí Preferences ‚Üí Settings
‚Ä¢ –ù–∞–π—Ç–∏ "terminal.integrated.fontFamily"
‚Ä¢ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: "Cascadia Code, JetBrains Mono, monospace"

[yellow]5. –î–ª—è PowerShell:[/yellow]
‚Ä¢ –ü—Ä–∞–≤—ã–π –∫–ª–∏–∫ –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–µ ‚Üí Properties
‚Ä¢ Font ‚Üí Cascadia Code"""

    console.print(Panel(setup_instructions, border_style="blue"))

def test_emoji_rendering():
    """–¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ–¥–∑–∏"""
    console.print(Panel.fit(
        "[bold magenta]üß™ –¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ–¥–∑–∏[/bold magenta]",
        border_style="magenta"
    ))

    test_cases = [
        ("–ë–∞–∑–æ–≤—ã–µ —ç–º–æ–¥–∑–∏", "üòÄ üòÇ ü§î üòç ü§©"),
        ("–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "üêç üî• üíª üì¶ ‚ö°"),
        ("–§–ª–∞–≥–∏ (–ø—Ä–æ–±–ª–µ–º–Ω—ã–µ)", "üá∫üá¶ üá∫üá∏ üá¨üáß üá©üá™ üá´üá∑"),
        ("–¶–≤–µ—Ç–Ω—ã–µ –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ", "üî¥ üü† üü° üü¢ üîµ üü£"),
        ("–°–ª–æ–∂–Ω—ã–µ —ç–º–æ–¥–∑–∏", "üë®‚Äçüíª üë©‚Äçüî¨ üè¥‚Äç‚ò†Ô∏è"),
        ("–°–∏–º–≤–æ–ª—ã", "‚úÖ ‚ùå ‚ö†Ô∏è ‚ÑπÔ∏è üöÄ"),
        ("–í–∞–ª—é—Ç—ã", "$ ‚Ç¨ ¬£ ¬• ‚Çø Œû"),
    ]

    for category, emojis in test_cases:
        console.print(f"[bold]{category}:[/bold] {emojis}")

    console.print("\n[yellow]‚ùì –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ –∫–≤–∞–¥—Ä–∞—Ç—ã ‚ñ° –∏–ª–∏ –∑–Ω–∞–∫–∏ –≤–æ–ø—Ä–æ—Å–∞ ?, —Ç–æ —à—Ä–∏—Ñ—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —ç—Ç–∏ —ç–º–æ–¥–∑–∏[/yellow]")

def create_font_install_script():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —à—Ä–∏—Ñ—Ç–æ–≤"""
    script_content = """@echo off
echo Installing fonts for better emoji support...

REM Install Cascadia Code
winget install Microsoft.CascadiaCode --accept-package-agreements

REM Install JetBrains Mono  
winget install JetBrains.JetBrainsMono --accept-package-agreements

REM Install Windows Terminal if not installed
winget install Microsoft.WindowsTerminal --accept-package-agreements

echo.
echo Installation complete!
echo Please restart your terminal applications.
pause
"""

    script_path = Path("install_fonts.bat")
    script_path.write_text(script_content, encoding='utf-8')

    console.print(f"[green]‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫—Ä–∏–ø—Ç: {script_path.absolute()}[/green]")
    console.print("[yellow]–ó–∞–ø—É—Å—Ç–∏—Ç–µ install_fonts.bat –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞[/yellow]")

def main():
    console.print(Panel.fit(
        "[bold magenta]üî§ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à—Ä–∏—Ñ—Ç–æ–≤ –¥–ª—è —ç–º–æ–¥–∑–∏ –≤ Windows[/bold magenta]\n"
        "[cyan]–£–ª—É—á—à–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —ç–º–æ–¥–∑–∏ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞—Ö Windows[/cyan]",
        border_style="magenta"
    ))

    if platform.system() != "Windows":
        console.print("[yellow]‚ö†Ô∏è –≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è Windows[/yellow]")
        console.print("[cyan]–í Linux/macOS —ç–º–æ–¥–∑–∏ –æ–±—ã—á–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç –∏–∑ –∫–æ—Ä–æ–±–∫–∏[/cyan]")
        return

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
    show_font_status()

    # –¢–µ—Å—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    console.print("\n")
    test_emoji_rendering()

    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
    console.print("\n")
    show_windows_terminal_setup()

    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É
    console.print("\n")
    if Confirm.ask("ü§ñ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Cascadia Code –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏?"):
        install_cascadia_code()

    if Confirm.ask("üìù –°–æ–∑–¥–∞—Ç—å bat-—Å–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —à—Ä–∏—Ñ—Ç–æ–≤?"):
        create_font_install_script()

    # –§–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    final_panel = Panel(
        """[bold green]üéâ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∏–¥–µ–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å —ç–º–æ–¥–∑–∏:[/bold green]

1Ô∏è‚É£ [bold]–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Windows Terminal[/bold] –≤–º–µ—Å—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ cmd/PowerShell
2Ô∏è‚É£ [bold]–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Cascadia Code[/bold] - –ª—É—á—à–∏–π —à—Ä–∏—Ñ—Ç –¥–ª—è —ç–º–æ–¥–∑–∏  
3Ô∏è‚É£ [bold]–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —à—Ä–∏—Ñ—Ç[/bold] –≤ –≤–∞—à–µ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ/—Ä–µ–¥–∞–∫—Ç–æ—Ä–µ
4Ô∏è‚É£ [bold]–û–±–Ω–æ–≤–∏—Ç–µ Windows[/bold] –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏
5Ô∏è‚É£ [bold]–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ emoji_system_windows.py[/bold] —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ñ–æ–ª–ª–±—ç–∫–∞–º–∏

[yellow]üí° –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —à—Ä–∏—Ñ—Ç–æ–≤ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Å–µ —Ç–µ—Ä–º–∏–Ω–∞–ª—ã![/yellow]""",
        title="‚ú® –ò—Ç–æ–≥–∏",
        border_style="green"
    )
    console.print(final_panel)

if __name__ == "__main__":
    main()